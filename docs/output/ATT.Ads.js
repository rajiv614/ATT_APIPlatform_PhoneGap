Ext.data.JsonP.ATT_Ads({"tagname":"class","name":"ATT.Ads","autodetected":{},"files":[{"filename":"attPhoneGapPluginAPI.js","href":"attPhoneGapPluginAPI.html#ATT-Ads"}],"members":[{"name":"getAds","tagname":"method","owner":"ATT.Ads","id":"method-getAds","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-ATT.Ads","short_doc":"Introduction:\n\nThe Advertising API enables authorized applications to receive pay per click advertisements to be plac...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/attPhoneGapPluginAPI.html#ATT-Ads' target='_blank'>attPhoneGapPluginAPI.js</a></div></pre><div class='doc-contents'><p><b>Introduction:</b></p>\n\n<p>The Advertising API enables authorized applications to receive pay per click advertisements to be placed within their app.</p>\n\n<p><b>Description:</b></p>\n\n<p>The Advertising API is a service that returns advertisements enabling the developer to insert the advertisements into their application.</p>\n\n<p><b>The Advertising API provides the following methods:</b></p>\n\n<p>• getAds</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getAds' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Ads'>ATT.Ads</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Ads-method-getAds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Ads-method-getAds' class='name expandable'>getAds</a>( <span class='pre'>options, success, error</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This operation returns an advertisement to the application. ...</div><div class='long'><p>This operation returns an advertisement to the application.</p>\n\n<p>All of the data is received through the callbacks.\nThe success callback will receive A JSON or XML formatted object that contains the content for the ad to be displayed.\nThe format of the returned object is specified by the value of the accept parameter in the call to the getAds method.</p>\n\n<p><b>Example:</b></p>\n\n<p>The following is an example of the getAds method.</p>\n\n<pre><code> getAds({\n     accept: \"application/json\",\n     udid: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n     body: {\n         Category: \"auto\",\n     },\n     accept: \"application/json\"\n },function(data) {\n\n    //success Callback\n\n }, function(error) {\n\n     //error Callback\n\n });\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>udid</span> : String<div class='sub-desc'><p>Required field that specifies the Merchant ID associated with your app. The UDID Parameter is used for ad tracking purpose.</p>\n</div></li><li><span class='pre'>accept</span> : String (optional)<div class='sub-desc'><p>Specifies the format of the body of the response. Valid values are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n<p>Defaults to: <code>&quot;application/json&quot;</code></p></div></li><li><span class='pre'>body</span> : String/Object<div class='sub-desc'><p>Specifies parameters for the ads request in either a either a flat object of a URI Encoded string</p>\n<ul><li><span class='pre'>Category</span> : String<div class='sub-desc'><p>Specifies the category for the advertisement</p>\n\n<p>The acceptable values for this parameter are:</p>\n\n<p>• auto</p>\n\n<p>• business</p>\n\n<p>• finance</p>\n\n<p>• chat</p>\n\n<p>• community</p>\n\n<p>• social</p>\n\n<p>• personals</p>\n\n<p>• communication</p>\n\n<p>• technology</p>\n\n<p>• games</p>\n\n<p>• health</p>\n\n<p>• medical</p>\n\n<p>• maps</p>\n\n<p>• local</p>\n\n<p>• entertainment</p>\n\n<p>• movies</p>\n\n<p>• tv</p>\n\n<p>• music</p>\n\n<p>• photos</p>\n\n<p>• video</p>\n\n<p>• news</p>\n\n<p>• weather</p>\n\n<p>• sports</p>\n\n<p>• shopping</p>\n\n<p>• tools</p>\n\n<p>• travel</p>\n\n<p>• other</p>\n</div></li><li><span class='pre'>Gender</span> : String (optional)<div class='sub-desc'><p>The Gender of the demographic audience of the app.\nFor Male use “M” and for Female use “F”.  This would be an optional run time parameter</p>\n</div></li><li><span class='pre'>ZipCode</span> : Number (optional)<div class='sub-desc'><p>Zip/Postal code of a user. For US only.</p>\n</div></li><li><span class='pre'>Number</span> : Number (optional)<div class='sub-desc'><p>Area code of a user.  For US only.</p>\n</div></li><li><span class='pre'>City</span> : String (optional)<div class='sub-desc'><p>The City (with state) of the device user. For US only.</p>\n</div></li><li><span class='pre'>Country</span> : String (optional)<div class='sub-desc'><p>Country of visitor. Overrides the country detected by IP.\nAn ISO 3166 code to be used for specifying a country code.</p>\n</div></li><li><span class='pre'>Longitude</span> : Number (optional)<div class='sub-desc'><p>User location latitude value (in degrees).</p>\n</div></li><li><span class='pre'>Latitude</span> : Number (optional)<div class='sub-desc'><p>User location latitude value (in degrees).</p>\n</div></li><li><span class='pre'>MaxHeight</span> : Number (optional)<div class='sub-desc'><p>Maximum height of the ad banner to be shown.</p>\n</div></li><li><span class='pre'>MaxWidth</span> : Number (optional)<div class='sub-desc'><p>Maximum width of the ad banner to be shown.</p>\n</div></li><li><span class='pre'>MinHeight</span> : Number (optional)<div class='sub-desc'><p>Minimum height of the ad banner to be shown.</p>\n</div></li><li><span class='pre'>MinWidth</span> : Number (optional)<div class='sub-desc'><p>Minimum width of the ad banner to be shown.</p>\n</div></li><li><span class='pre'>Type</span> : Number (optional)<div class='sub-desc'><p>Type of ads to be returned (1 – text, 2 – image, ).\nYou can set different combinations with these values. For example, 3 = 1 + 2 (text + image).\nOnly type =3 will be supported in this release . So the response could be either text or image Ad.</p>\n</div></li><li><span class='pre'>AgeGroup</span> : String (optional)<div class='sub-desc'><p>The age group of the demographic audience of the app. Choose one of the following:</p>\n\n<p>• 1-13</p>\n\n<p>• 14-25</p>\n\n<p>• 26-35</p>\n\n<p>• 36-55</p>\n\n<p>• 55-100</p>\n</div></li><li><span class='pre'>Over18</span> : Number (optional)<div class='sub-desc'><p>Filter ads by over 18 content: 0 or 1 — deny over 18 content, 2 — only over 18 content, 3 - allow all ads.</p>\n</div></li><li><span class='pre'>Keywords</span> : String (optional)<div class='sub-desc'><p>Filter ads by keywords (delimited by keywords=music, commas).</p>\n</div></li><li><span class='pre'>IsSizeRequired</span> : Boolean (optional)<div class='sub-desc'><p>If set true, the image size values (width and height) will be returned in html.</p>\n</div></li><li><span class='pre'>Premium</span> : Number (optional)<div class='sub-desc'><p>Filter ads by premium status (0 – non- premium, 1 – premium only, 2 – both). Default value is 0.</p>\n<p>Defaults to: <code>0</code></p></div></li></ul></div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns an error.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});